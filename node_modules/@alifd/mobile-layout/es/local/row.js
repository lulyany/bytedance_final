var _excluded = ["flex"];

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { createElement } from 'rax';
import RowGrid from './row-grid';
import RowFlex from './row-flex';

/**
 * 行拆分布局 （子元素如果不是 Row、Col 或 Cell, 则默认用 Cell 包裹）
 */
export var Row = function (props) {
  var flex = props.flex,
      others = _objectWithoutPropertiesLoose(props, _excluded); // flex & grid 模式实现功能完全一致，此处的考量：
  // 1. 在低代码引擎下， flex 拖动元素更流畅
  // 2. 在小程序兼容考虑， grid 模式对微信小程序更优化


  return flex ? createElement(RowFlex, others) : createElement(RowGrid, others);
};
Row.displayName = 'Row';
Row._typeMark = 'Row';
Row.defaultProps = {
  flex: false,
  verAlign: 'stretch'
};
export default Row;