var _excluded = ["children", "className", "noPadding", "mode"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { createElement, useContext } from 'rax';
import classNames from 'classnames';
import View from '../common/view';
import Context from '../common/context';
import { isValidGap } from '../utils';

/**
 * 内容
 * @param props
 * @constructor
 */
var Content = function (props) {
  var _classNames, _classNames2;

  var children = props.children,
      className = props.className,
      noPaddingProp = props.noPadding,
      mode = props.mode,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var _useContext = useContext(Context),
      prefix = _useContext.prefix,
      sectionGap = _useContext.sectionGap,
      noPadding = _useContext.noPadding;

  var contentCls = classNames(className, (_classNames = {}, _classNames[prefix + "page-content"] = true, _classNames[prefix + "bg--" + mode] = mode, _classNames));
  var innerCls = classNames(prefix + "page-content-inner", (_classNames2 = {}, _classNames2[prefix + "page-content--no-padding"] = noPaddingProp || noPadding, _classNames2));

  var innerStyle = _extends({}, isValidGap(sectionGap) ? {
    gap: sectionGap
  } : null);

  return createElement(View, _extends({}, others, {
    className: contentCls
  }), createElement(View, {
    className: innerCls,
    style: innerStyle
  }, children));
};

Content.displayName = 'Content';
Content._typeMark = 'Content';
export default Content;