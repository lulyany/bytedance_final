import { useEffect, useState } from 'rax';
import { getCurBreakPoint, throttle } from '../index';
export default function useWindowResize(breakPoints, onBreakPointChange, responsive) {
  if (responsive === void 0) {
    responsive = false;
  }

  var _useState = useState(getCurBreakPoint(breakPoints)),
      curBreakPoint = _useState[0],
      setBreakPoint = _useState[1];

  var resize = throttle(function () {
    var newBreakPoint = getCurBreakPoint(breakPoints); // breakpoint change callback

    if (onBreakPointChange && newBreakPoint.width !== curBreakPoint.width) {
      onBreakPointChange(newBreakPoint, curBreakPoint, breakPoints);
    }

    setBreakPoint(newBreakPoint);
  });
  useEffect(function () {
    if (responsive) {
      window.addEventListener('resize', resize, false);
      return function () {
        return window.removeEventListener('resize', resize, false);
      };
    }

    return function () {};
  }, [responsive, resize]);
  return curBreakPoint;
}