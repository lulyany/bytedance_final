"use strict";

exports.__esModule = true;
exports.default = void 0;

var _rax = require("rax");

var _classnames = _interopRequireDefault(require("classnames"));

var _view = _interopRequireDefault(require("../common/view"));

var _constant = require("../common/constant");

var _context = _interopRequireDefault(require("../common/context"));

var _utils = require("../utils");

var _excluded = ["className", "children", "verAlign", "width", "height", "block", "direction", "gap", "align", "style"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * 单元格容器(默认垂直方向的 flex 布局容器)
 */
var Cell = function (props) {
  var _classNames;

  var className = props.className,
      children = props.children,
      verAlign = props.verAlign,
      width = props.width,
      height = props.height,
      block = props.block,
      direction = props.direction,
      gap = props.gap,
      align = props.align,
      style = props.style,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var _useContext = (0, _rax.useContext)(_context.default),
      prefix = _useContext.prefix;

  var newStyle = _extends({}, !block ? _extends({
    display: 'flex',
    flexDirection: direction === 'ver' ? 'column' : 'row'
  }, verAlign ? {
    justifyContent: _constant.VER_ALIGN_ALIAS_MAP[verAlign] || verAlign
  } : null) : null, {
    width: width ? (0, _utils.wrapUnit)(width) : 'auto'
  }, (0, _utils.isValidGap)(gap) ? {
    display: 'grid',
    width: '100%',
    justifyContent: 'none',
    justifyItems: _constant.ALIGN_ALIAS_MAP[align] || align,
    gridGap: (0, _utils.wrapUnit)(gap)
  } : null, height ? {
    height: (0, _utils.wrapUnit)(height)
  } : null, style);

  return (0, _rax.createElement)(_view.default, _extends({}, others, {
    className: (0, _classnames.default)(prefix + "cell", className, (_classNames = {}, _classNames[prefix + "cell-align--" + align] = align, _classNames)),
    style: newStyle
  }), children);
};

Cell.displayName = 'Cell';
Cell._typeMark = 'Cell';
Cell.defaultProps = {
  direction: 'ver',
  verAlign: 'top',
  block: false
};
var _default = Cell;
exports.default = _default;