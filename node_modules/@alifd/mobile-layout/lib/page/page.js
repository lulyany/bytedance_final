"use strict";

exports.__esModule = true;
exports.default = void 0;

var _rax = require("rax");

var _classnames = _interopRequireDefault(require("classnames"));

var _raxChildren = _interopRequireDefault(require("rax-children"));

var _raxIsValidElement = _interopRequireDefault(require("rax-is-valid-element"));

var _view = _interopRequireDefault(require("../common/view"));

var _utils = require("../utils");

var _context = _interopRequireDefault(require("../common/context"));

var _header = _interopRequireDefault(require("./header"));

var _content = _interopRequireDefault(require("./content"));

var _footer = _interopRequireDefault(require("./footer"));

var _useWindowResize = _interopRequireDefault(require("../utils/hooks/use-window-resize"));

var _constant = require("../common/constant");

var _excluded = ["className", "prefix", "mode", "responsive", "breakPoints", "children", "sectionGap", "blockGap", "gridGap", "noPadding", "onBreakPointChange"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * 过滤出 content header footer
 * @param children
 */
function reformChildren(children) {
  var header = null;
  var footer = null;
  var content = null;

  var otherChildren = _raxChildren.default.map(children, function (child) {
    if ((0, _raxIsValidElement.default)(child)) {
      var _child$type;

      var tm = child == null ? void 0 : (_child$type = child.type) == null ? void 0 : _child$type._typeMark;

      if (tm === 'Header') {
        if (header) {
          // eslint-disable-next-line no-console
          console.error('[mobile-pro-layout]: <Page> should have only one <Header> child');
        }

        header = child;
        return null;
      } else if (tm === 'Footer') {
        if (footer) {
          // eslint-disable-next-line no-console
          console.error('[mobile-pro-layout]: <Page> should have only one <Footer> child');
        }

        footer = child;
        return null;
      } else if (tm === 'Content') {
        if (content) {
          // eslint-disable-next-line no-console
          console.error('[mobile-pro-layout]: <Page> should have only one <Content> child');
        }

        content = child;
        return null;
      }
    }

    return child;
  }).filter(function (child) {
    return !!child;
  });

  return (0, _rax.createElement)(_rax.Fragment, null, header, content || (0, _rax.createElement)(_content.default, null, otherChildren), footer);
}
/**
 * 页面
 * @param props
 * @constructor
 */


var Page = function (props) {
  var _classNames;

  var className = props.className,
      prefix = props.prefix,
      mode = props.mode,
      responsive = props.responsive,
      breakPoints = props.breakPoints,
      children = props.children,
      sectionGap = props.sectionGap,
      blockGap = props.blockGap,
      gridGap = props.gridGap,
      noPadding = props.noPadding,
      onBreakPointChange = props.onBreakPointChange,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var curBreakPoint = (0, _useWindowResize.default)(breakPoints, onBreakPointChange, responsive); // 当前断点支持的最大列数

  var maxNumberOfColumns = (0, _utils.getMaxNumberOfColumns)(breakPoints);
  var pageCls = (0, _classnames.default)(className, (_classNames = {}, _classNames[prefix + "page"] = true, _classNames[prefix + "bg--" + mode] = mode, _classNames[prefix + "page--col-" + curBreakPoint.numberOfColumns] = true, _classNames[prefix + "page--no-padding"] = noPadding, _classNames));
  (0, _rax.useEffect)(function () {
    if (onBreakPointChange) {
      // 页面加载后，直接触发一次断点回调
      onBreakPointChange(curBreakPoint, null, breakPoints);
    }
  }, []);
  return (0, _rax.createElement)(_view.default, _extends({}, others, {
    className: pageCls
  }), (0, _rax.createElement)(_context.default.Provider, {
    value: {
      prefix: prefix,
      breakPoint: curBreakPoint,
      maxNumberOfColumns: maxNumberOfColumns,
      noPadding: noPadding,
      sectionGap: sectionGap,
      blockGap: blockGap,
      gridGap: gridGap
    }
  }, reformChildren(children)));
};

Page.displayName = 'Page';
Page._typeMark = 'Page';
Page.Header = _header.default;
Page.Content = _content.default;
Page.Footer = _footer.default;
Page.defaultProps = {
  prefix: 'mt-layout-',
  mode: 'lining',
  responsive: false,
  breakPoints: _constant.DEFAULT_BREAK_POINTS,
  noPadding: false
};
var _default = Page;
exports.default = _default;